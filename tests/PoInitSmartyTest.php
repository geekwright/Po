<?php
namespace Geekwright\Po;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-02-18 at 21:12:34.
 */
class PoInitSmartyTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var PoInitSmarty
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        if (!class_exists('\Smarty')) {
            $this->markTestSkipped(
              'Smarty is not available.'
            );
        }
        $smarty = new \Smarty;
        $this->object = new PoInitSmarty($smarty, new PoFile);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Geekwright\Po\PoInitSmarty::getPoFile
     * @covers Geekwright\Po\PoInitSmarty::setPoFile
     */
    public function testGetSetPoFile()
    {
        $pofile = new PoFile();
        $this->object->setPoFile($pofile);
        $actual = $this->object->getPoFile();
        $this->assertSame($pofile, $actual);
    }

    /**
     * @covers Geekwright\Po\PoInitSmarty::getMsgctxtArgNames
     * @covers Geekwright\Po\PoInitSmarty::setMsgctxtArgNames
     * @covers Geekwright\Po\PoInitSmarty::addMsgctxtArgNames
     */
    public function testAddGetSetMsgctxtArgNames()
    {
        $value = array();
        $this->object->setMsgctxtArgNames($value);
        $actual = $this->object->getMsgctxtArgNames();
        $this->assertEquals($value, $actual);

        $tag1 = 'tag1';
        $tag2 = 'tag2';
        $value = array($tag1, $tag2);
        $this->object->addMsgctxtArgNames($tag1);
        $this->object->addMsgctxtArgNames($tag2);
        $actual = $this->object->getMsgctxtArgNames();
        $this->assertEquals($value, $actual);
    }

    /**
     * @covers Geekwright\Po\PoInitSmarty::getMsgidArgNames
     * @covers Geekwright\Po\PoInitSmarty::setMsgidArgNames
     * @covers Geekwright\Po\PoInitSmarty::addMsgidArgNames
     */
    public function testAddGetSetMsgidArgNames()
    {
        $value = array();
        $this->object->setMsgidArgNames($value);
        $actual = $this->object->getMsgidArgNames();
        $this->assertEquals($value, $actual);

        $tag1 = 'tag1';
        $tag2 = 'tag2';
        $value = array($tag1, $tag2);
        $this->object->addMsgidArgNames($tag1);
        $this->object->addMsgidArgNames($tag2);
        $actual = $this->object->getMsgidArgNames();
        $this->assertEquals($value, $actual);
    }

    /**
     * @covers Geekwright\Po\PoInitSmarty::getMsgidPluralArgNames
     * @covers Geekwright\Po\PoInitSmarty::setMsgidPluralArgNames
     * @covers Geekwright\Po\PoInitSmarty::addMsgidPluralArgNames
     */
    public function testAddGetSetMsgidPluralArgNames()
    {
        $value = array();
        $this->object->setMsgidPluralArgNames($value);
        $actual = $this->object->getMsgidPluralArgNames();
        $this->assertEquals($value, $actual);

        $tag1 = 'tag1';
        $tag2 = 'tag2';
        $value = array($tag1, $tag2);
        $this->object->addMsgidPluralArgNames($tag1);
        $this->object->addMsgidPluralArgNames($tag2);
        $actual = $this->object->getMsgidPluralArgNames();
        $this->assertEquals($value, $actual);
    }

    /**
     * @covers Geekwright\Po\PoInitSmarty::addGettextTags
     * @covers Geekwright\Po\PoInitSmarty::getGettextTags
     * @covers Geekwright\Po\PoInitSmarty::setGettextTags
     */
    public function testAddGetSetGettextTags()
    {
        $value = array();
        $this->object->setGettextTags($value);
        $actual = $this->object->getGettextTags();
        $this->assertEquals($value, $actual);

        $tag1 = 'tag1';
        $tag2 = 'tag2';
        $value = array($tag1, $tag2);
        $this->object->addGettextTags($tag1);
        $this->object->addGettextTags($tag2);
        $actual = $this->object->getGettextTags();
        $this->assertEquals($value, $actual);
    }

    /**
     * @covers Geekwright\Po\PoInitSmarty::addNgettextTags
     * @covers Geekwright\Po\PoInitSmarty::getNgettextTags
     * @covers Geekwright\Po\PoInitSmarty::setNgettextTags
     */
    public function testAddGetSetNgettextTags()
    {
        $value = array();
        $this->object->setNgettextTags($value);
        $actual = $this->object->getNgettextTags();
        $this->assertEquals($value, $actual);

        $tag1 = 'tag1';
        $tag2 = 'tag2';
        $value = array($tag1, $tag2);
        $this->object->addNgettextTags($tag1);
        $this->object->addNgettextTags($tag2);
        $actual = $this->object->getNgettextTags();
        $this->assertEquals($value, $actual);
    }

    /**
     * @covers Geekwright\Po\PoInitSmarty::addPgettextTags
     * @covers Geekwright\Po\PoInitSmarty::getPgettextTags
     * @covers Geekwright\Po\PoInitSmarty::setPgettextTags
     */
    public function testAddGetSetPgettextTags()
    {
        $value = array();
        $this->object->setPgettextTags($value);
        $actual = $this->object->getPgettextTags();
        $this->assertEquals($value, $actual);

        $tag1 = 'tag1';
        $tag2 = 'tag2';
        $value = array($tag1, $tag2);
        $this->object->addPgettextTags($tag1);
        $this->object->addPgettextTags($tag2);
        $actual = $this->object->getPgettextTags();
        $this->assertEquals($value, $actual);
    }

    /**
     * @covers Geekwright\Po\PoInitSmarty::msginitFile
     * @todo   Implement testMsginitFile().
     */
    public function testMsginitFile()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Geekwright\Po\PoInitSmarty::msginitString
     * @todo   Implement testMsginitString().
     */
    public function testMsginitString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
